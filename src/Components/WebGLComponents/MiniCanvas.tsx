/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useEffect, useRef, useState } from "react";
import { TextTioms } from './TextTioms';
import { useGLTF } from "@react-three/drei";
import { TriangleMaterial } from '../Shaders/MiniLogo/triangleMaterial';
import { extend } from '@react-three/fiber'


extend({TriangleMaterial})

export const MiniCanvas = (props) => {

const positionY = 0.9;
const [togglePosition, setTogglePosition] = useState(false);
const { nodes } = useGLTF("./miniTriangle.glb");
const triangleRef = useRef();

const triangleMaterial = useRef();


  useEffect(() => {
    const intervalId = setInterval(() => {
      if (triangleRef.current) {
        triangleRef.current.rotation.z -= Math.PI / 30;
      }
    }, 250);

    return () => clearInterval(intervalId);
  }, []);


  useEffect(()=>{
    props.mouseOver?setTogglePosition(false):setTogglePosition(true)
    if(props.mouseOver){
      console.log("mouseOver")
    }
  },[props.mouseOver])

useEffect(()=> {
  if(props.mouseClick){
    console.log("mouseClick")
  }
},[props.mouseClick])

  return (

          <group>
            <mesh
                name="Triangle"
                ref={triangleRef}
                geometry={nodes.Triangle.geometry}
                position={[-0.1, positionY, 0]}
                scale={[0.3,0.3,0.3]}>
                <triangleMaterial ref={triangleMaterial} />
              </mesh>
            <TextTioms togglePosition={togglePosition} animation2={true} miniPosition={positionY}/>
          </group>
          
          
        );
}
useGLTF.preload("./miniTriangle.glb");